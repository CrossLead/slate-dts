// Generated by dts-bundle v0.7.3

declare module "slate-html-serializer" {
  /**
   * HTML serializer.
   *
   * @type {Html}
   */
  class Html {
    /**
     * Create a new serializer with `rules`.
     *
     * @param {Object} options
     *   @property {Array} rules
     *   @property {String|Object|Block} defaultBlock
     *   @property {Function} parseHtml
     */
    constructor(options?: {});
    /**
     * Deserialize pasted HTML.
     *
     * @param {String} html
     * @param {Object} options
     *   @property {Boolean} toRaw
     * @return {Value}
     */
    deserialize: (html: any, options?: {}) => any;
    /**
     * Deserialize an array of DOM elements.
     *
     * @param {Array} elements
     * @return {Array}
     */
    deserializeElements: (elements?: any[]) => any[];
    /**
     * Deserialize a DOM element.
     *
     * @param {Object} element
     * @return {Any}
     */
    deserializeElement(element: any): any;
    /**
     * Deserialize a `mark` object.
     *
     * @param {Object} mark
     * @return {Array}
     */
    deserializeMark(mark: any): any;
    /**
     * Serialize a `value` object into an HTML string.
     *
     * @param {Value} value
     * @param {Object} options
     *   @property {Boolean} render
     * @return {String|Array}
     */
    serialize: (value: any, options?: {}) => any;
    /**
     * Serialize a `node`.
     *
     * @param {Node} node
     * @return {String}
     */
    serializeNode(node: any): any;
    /**
     * Serialize a `leaf`.
     *
     * @param {Leaf} leaf
     * @return {String}
     */
    serializeLeaf(leaf: any): any;
    /**
     * Serialize a `string`.
     *
     * @param {String} string
     * @return {String}
     */
    serializeString(string: any): any;
    /**
     * Filter out cruft newline nodes inserted by the DOM parser.
     *
     * @param {Object} element
     * @return {Boolean}
     */
    cruftNewline(element: any): boolean;
  }
  export default Html;
}
